{"version":3,"sources":["serverAPI/cities.js","serverAPI/weather.js","store/actions/actionCreators.js","components/helpers.js","components/weatherView/Forecast.js","components/search/Search.js","components/header/Header.js","components/card/SingleCard.js","components/favorites/Favorites.js","App.js","store/reducers/weatherReducer.js","store/reducers/citiesReducer.js","store/reducers/reducers.js","store/store.js","index.js"],"names":["getCities","char","a","axios","get","then","res","cities","data","console","log","getCity","city","getLocation","position","latitude","longitude","location","getWeatherData","weather","getForecastData","forecast","getAllCities","dispatch","length","type","payload","setCities","setCity","cityName","error","cityRes","Key","weatherRes","restartState","getWeatherIcon","iconID","iconPhrase","text","time","Date","Day","getHours","Icon","IconPhrase","Night","icon","className","maxMinTemp","min","max","celMin","celMax","Math","floor","getDayOfWeek","date","dayOfWeek","getDay","isNaN","containsObject","obj","arr","cell","index","contain","Forecast","role","style","wordSpacing","LocalizedName","weatherData","DailyForecasts","map","Temperature","Minimum","Value","Maximum","onClick","prevStorage","JSON","parse","localStorage","getItem","push","setItem","stringify","storage","handleSave","objIsContain","splice","handleDelete","Search","useState","setCityName","showForecast","setShowForecast","useEffect","setFunc","success","coords","EnglishName","navigator","geolocation","getCurrentPosition","getCurLocation","e","preventDefault","height","zIndex","inputProps","placeholder","getItemValue","item","items","renderItem","isHighlighted","background","value","onChange","target","onSelect","val","Header","to","fontWeight","color","fontFamily","textDecoration","fontSize","SingleCard","countryName","cityKey","setIcon","temperature","setTemperature","setText","WeatherIcon","Metric","WeatherText","setWeather","Favorites","favorites","setFavorites","setError","history","useHistory","moveToCity","Country","dipatchActionToProps","actionCreators","connect","state","citiesError","exact","path","weatherDataReducer","action","citiesReducer","cites","reducers","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a571ab5a.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const getCities = async (char) => {\r\n  try {\r\n    const cities = await axios.get(`https://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=%09s3CuwXyFEGusav1bh2jSNfEK3TJQFRGx&q=${char}`)\r\n    .then(res => {\r\n        return res;\r\n    });\r\n    return cities.data;\r\n    // return cities;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getCity = async (city) => {\r\n  try {\r\n    const cities = await axios.get(`https://dataservice.accuweather.com/locations/v1/cities/autocomplete?apikey=%09s3CuwXyFEGusav1bh2jSNfEK3TJQFRGx&q=${city}`)\r\n    .then(res => {\r\n        return res;\r\n    });\r\n    return cities.data[0];\r\n    // return {\r\n    //   Version: 1,\r\n    //   Key: \"182536\",\r\n    //   Type: \"City\",\r\n    //   Rank: 10,\r\n    //   LocalizedName: \"Athens\",\r\n    //   Country: {\r\n    //     ID: \"GR\",\r\n    //     LocalizedName: \"Greece\",\r\n    //   },\r\n    //   AdministrativeArea: {\r\n    //     ID: \"I\",\r\n    //     LocalizedName: \"Attica\",\r\n    //   },\r\n    // };\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getLocation = async (position) => {\r\n  try {\r\n    const location = await axios.get(`https://dataservice.accuweather.com/locations/v1/cities/geoposition/search?apikey=%09s3CuwXyFEGusav1bh2jSNfEK3TJQFRGx&q=${position.latitude}%2C%20${position.longitude}`)\r\n    .then(res => {\r\n          return res;\r\n      });\r\n      return location.data;\r\n    // return {\r\n    //   Version: 1,\r\n    //   Key: \"215760\",\r\n    //   Type: \"City\",\r\n    //   Rank: 95,\r\n    //   LocalizedName: \"Nakahlat Yitskhak\",\r\n    //   ParentCity: {\r\n    //     EnglishName: \"Tel Aviv\",\r\n    //     Key: \"215854\",\r\n    //     LocalizedName: \"Tel Aviv\",\r\n    //   },\r\n    // };\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n// const cities = [\r\n//   {\r\n//     Version: 1,\r\n//     Key: \"182536\",\r\n//     Type: \"City\",\r\n//     Rank: 10,\r\n//     LocalizedName: \"Athens\",\r\n//     Country: {\r\n//       ID: \"GR\",\r\n//       LocalizedName: \"Greece\",\r\n//     },\r\n//     AdministrativeArea: {\r\n//       ID: \"I\",\r\n//       LocalizedName: \"Attica\",\r\n//     },\r\n//   },\r\n//   {\r\n//     Version: 1,\r\n//     Key: \"316938\",\r\n//     Type: \"City\",\r\n//     Rank: 10,\r\n//     LocalizedName: \"Ankara\",\r\n//     Country: {\r\n//       ID: \"TR\",\r\n//       LocalizedName: \"Turkey\",\r\n//     },\r\n//     AdministrativeArea: {\r\n//       ID: \"06\",\r\n//       LocalizedName: \"Ankara\",\r\n//     },\r\n//   },\r\n//   {\r\n//     Version: 1,\r\n//     Key: \"126995\",\r\n//     Type: \"City\",\r\n//     Rank: 11,\r\n//     LocalizedName: \"Alexandria\",\r\n//     Country: {\r\n//       ID: \"EG\",\r\n//       LocalizedName: \"Egypt\",\r\n//     },\r\n//     AdministrativeArea: {\r\n//       ID: \"ALX\",\r\n//       LocalizedName: \"Alexandria\",\r\n//     },\r\n//   },\r\n//   {\r\n//     Version: 1,\r\n//     Key: \"56912\",\r\n//     Type: \"City\",\r\n//     Rank: 13,\r\n//     LocalizedName: \"Anqing\",\r\n//     Country: {\r\n//       ID: \"CN\",\r\n//       LocalizedName: \"China\",\r\n//     },\r\n//     AdministrativeArea: {\r\n//       ID: \"AH\",\r\n//       LocalizedName: \"Anhui\",\r\n//     },\r\n//   },\r\n//   {\r\n//     Version: 1,\r\n//     Key: \"59083\",\r\n//     Type: \"City\",\r\n//     Rank: 15,\r\n//     LocalizedName: \"Anyang\",\r\n//     Country: {\r\n//       ID: \"CN\",\r\n//       LocalizedName: \"China\",\r\n//     },\r\n//     AdministrativeArea: {\r\n//       ID: \"HA\",\r\n//       LocalizedName: \"Henan\",\r\n//     },\r\n//   },\r\n//   {\r\n//     Version: 1,\r\n//     Key: \"102138\",\r\n//     Type: \"City\",\r\n//     Rank: 15,\r\n//     LocalizedName: \"Anshan\",\r\n//     Country: {\r\n//       ID: \"CN\",\r\n//       LocalizedName: \"China\",\r\n//     },\r\n//     AdministrativeArea: {\r\n//       ID: \"LN\",\r\n//       LocalizedName: \"Liaoning\",\r\n//     },\r\n//   },\r\n//   {\r\n//     Version: 1,\r\n//     Key: \"202438\",\r\n//     Type: \"City\",\r\n//     Rank: 15,\r\n//     LocalizedName: \"Ahmedabad\",\r\n//     Country: {\r\n//       ID: \"IN\",\r\n//       LocalizedName: \"India\",\r\n//     },\r\n//     AdministrativeArea: {\r\n//       ID: \"GJ\",\r\n//       LocalizedName: \"Gujarat\",\r\n//     },\r\n//   },\r\n//   {\r\n//     Version: 1,\r\n//     Key: \"2093\",\r\n//     Type: \"City\",\r\n//     Rank: 20,\r\n//     LocalizedName: \"Algiers\",\r\n//     Country: {\r\n//       ID: \"DZ\",\r\n//       LocalizedName: \"Algeria\",\r\n//     },\r\n//     AdministrativeArea: {\r\n//       ID: \"16\",\r\n//       LocalizedName: \"Alger\",\r\n//     },\r\n//   },\r\n//   {\r\n//     Version: 1,\r\n//     Key: \"126831\",\r\n//     Type: \"City\",\r\n//     Rank: 20,\r\n//     LocalizedName: \"Addis Ababa\",\r\n//     Country: {\r\n//       ID: \"ET\",\r\n//       LocalizedName: \"Ethiopia\",\r\n//     },\r\n//     AdministrativeArea: {\r\n//       ID: \"AA\",\r\n//       LocalizedName: \"Addis Ababa\",\r\n//     },\r\n//   },\r\n//   {\r\n//     Version: 1,\r\n//     Key: \"178551\",\r\n//     Type: \"City\",\r\n//     Rank: 20,\r\n//     LocalizedName: \"Accra\",\r\n//     Country: {\r\n//       ID: \"GH\",\r\n//       LocalizedName: \"Ghana\",\r\n//     },\r\n//     AdministrativeArea: {\r\n//       ID: \"AA\",\r\n//       LocalizedName: \"Greater Accra\",\r\n//     },\r\n//   },\r\n// ];","import axios from 'axios';\r\n\r\nexport const getWeatherData = async (city) => {\r\n    try{\r\n        // return data[0];\r\n        const weather = await axios.get(`https://dataservice.accuweather.com/currentconditions/v1/${city}?apikey=s3CuwXyFEGusav1bh2jSNfEK3TJQFRGx`)\r\n        .then(res => {\r\n            return res;\r\n        });\r\n        // console.log(weather.data)\r\n        return weather.data[0];\r\n        \r\n    }catch(error){\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const getForecastData = async (city) => {\r\n    try{\r\n        // return forecast;\r\n        const forecast = await axios.get(`https://dataservice.accuweather.com/forecasts/v1/daily/5day/${city}?apikey=s3CuwXyFEGusav1bh2jSNfEK3TJQFRGx`)\r\n        .then(res => {\r\n            return res;\r\n        });\r\n        return forecast.data;\r\n        \r\n    }catch(error){\r\n        console.log(error);\r\n    }\r\n}\r\n\r\n// const data = [\r\n//     {\r\n//       \"LocalObservationDateTime\": \"2021-07-21T10:01:00+03:00\",\r\n//       \"EpochTime\": 1626850860,\r\n//       \"WeatherText\": \"Mostly cloudy\",\r\n//       \"WeatherIcon\": 6,\r\n//       \"HasPrecipitation\": false,\r\n//       \"PrecipitationType\": null,\r\n//       \"IsDayTime\": true,\r\n//       \"Temperature\": {\r\n//         \"Metric\": {\r\n//           \"Value\": 31.3,\r\n//           \"Unit\": \"C\",\r\n//           \"UnitType\": 17\r\n//         },\r\n//         \"Imperial\": {\r\n//           \"Value\": 88.0,\r\n//           \"Unit\": \"F\",\r\n//           \"UnitType\": 18\r\n//         }\r\n//       },\r\n//       \"MobileLink\": \"http://www.accuweather.com/en/il/tel-aviv/215854/current-weather/215854?lang=en-us\",\r\n//       \"Link\": \"http://www.accuweather.com/en/il/tel-aviv/215854/current-weather/215854?lang=en-us\"\r\n//     }\r\n//   ]\r\n\r\n// const forecast = {\r\n//   \"Headline\": {\r\n//     \"EffectiveDate\": \"2021-07-24T08:00:00+03:00\",\r\n//     \"EffectiveEpochDate\": 1627102800,\r\n//     \"Severity\": 4,\r\n//     \"Text\": \"Pleasant this weekend\",\r\n//     \"Category\": \"mild\",\r\n//     \"EndDate\": null,\r\n//     \"EndEpochDate\": null,\r\n//     \"MobileLink\": \"http://www.accuweather.com/en/gr/athens/182536/extended-weather-forecast/182536?lang=en-us\",\r\n//     \"Link\": \"http://www.accuweather.com/en/gr/athens/182536/daily-weather-forecast/182536?lang=en-us\"\r\n//   },\r\n//   \"DailyForecasts\": [\r\n//     {\r\n//       \"Date\": \"2021-07-22T07:00:00+03:00\",\r\n//       \"EpochDate\": 1626926400,\r\n//       \"Temperature\": {\r\n//         \"Minimum\": {\r\n//           \"Value\": 76,\r\n//           \"Unit\": \"F\",\r\n//           \"UnitType\": 18\r\n//         },\r\n//         \"Maximum\": {\r\n//           \"Value\": 90,\r\n//           \"Unit\": \"F\",\r\n//           \"UnitType\": 18\r\n//         }\r\n//       },\r\n//       \"Day\": {\r\n//         \"Icon\": 1,\r\n//         \"IconPhrase\": \"Sunny\",\r\n//         \"HasPrecipitation\": false\r\n//       },\r\n//       \"Night\": {\r\n//         \"Icon\": 33,\r\n//         \"IconPhrase\": \"Clear\",\r\n//         \"HasPrecipitation\": false\r\n//       },\r\n//       \"Sources\": [\r\n//         \"AccuWeather\"\r\n//       ],\r\n//       \"MobileLink\": \"http://www.accuweather.com/en/gr/athens/182536/daily-weather-forecast/182536?day=1&lang=en-us\",\r\n//       \"Link\": \"http://www.accuweather.com/en/gr/athens/182536/daily-weather-forecast/182536?day=1&lang=en-us\"\r\n//     },\r\n//     {\r\n//       \"Date\": \"2021-07-23T07:00:00+03:00\",\r\n//       \"EpochDate\": 1627012800,\r\n//       \"Temperature\": {\r\n//         \"Minimum\": {\r\n//           \"Value\": 75,\r\n//           \"Unit\": \"F\",\r\n//           \"UnitType\": 18\r\n//         },\r\n//         \"Maximum\": {\r\n//           \"Value\": 89,\r\n//           \"Unit\": \"F\",\r\n//           \"UnitType\": 18\r\n//         }\r\n//       },\r\n//       \"Day\": {\r\n//         \"Icon\": 1,\r\n//         \"IconPhrase\": \"Sunny\",\r\n//         \"HasPrecipitation\": false\r\n//       },\r\n//       \"Night\": {\r\n//         \"Icon\": 33,\r\n//         \"IconPhrase\": \"Clear\",\r\n//         \"HasPrecipitation\": false\r\n//       },\r\n//       \"Sources\": [\r\n//         \"AccuWeather\"\r\n//       ],\r\n//       \"MobileLink\": \"http://www.accuweather.com/en/gr/athens/182536/daily-weather-forecast/182536?day=2&lang=en-us\",\r\n//       \"Link\": \"http://www.accuweather.com/en/gr/athens/182536/daily-weather-forecast/182536?day=2&lang=en-us\"\r\n//     },\r\n//     {\r\n//       \"Date\": \"2021-07-24T07:00:00+03:00\",\r\n//       \"EpochDate\": 1627099200,\r\n//       \"Temperature\": {\r\n//         \"Minimum\": {\r\n//           \"Value\": 74,\r\n//           \"Unit\": \"F\",\r\n//           \"UnitType\": 18\r\n//         },\r\n//         \"Maximum\": {\r\n//           \"Value\": 90,\r\n//           \"Unit\": \"F\",\r\n//           \"UnitType\": 18\r\n//         }\r\n//       },\r\n//       \"Day\": {\r\n//         \"Icon\": 1,\r\n//         \"IconPhrase\": \"Sunny\",\r\n//         \"HasPrecipitation\": false\r\n//       },\r\n//       \"Night\": {\r\n//         \"Icon\": 33,\r\n//         \"IconPhrase\": \"Clear\",\r\n//         \"HasPrecipitation\": false\r\n//       },\r\n//       \"Sources\": [\r\n//         \"AccuWeather\"\r\n//       ],\r\n//       \"MobileLink\": \"http://www.accuweather.com/en/gr/athens/182536/daily-weather-forecast/182536?day=3&lang=en-us\",\r\n//       \"Link\": \"http://www.accuweather.com/en/gr/athens/182536/daily-weather-forecast/182536?day=3&lang=en-us\"\r\n//     },\r\n//     {\r\n//       \"Date\": \"2021-07-25T07:00:00+03:00\",\r\n//       \"EpochDate\": 1627185600,\r\n//       \"Temperature\": {\r\n//         \"Minimum\": {\r\n//           \"Value\": 74,\r\n//           \"Unit\": \"F\",\r\n//           \"UnitType\": 18\r\n//         },\r\n//         \"Maximum\": {\r\n//           \"Value\": 90,\r\n//           \"Unit\": \"F\",\r\n//           \"UnitType\": 18\r\n//         }\r\n//       },\r\n//       \"Day\": {\r\n//         \"Icon\": 1,\r\n//         \"IconPhrase\": \"Sunny\",\r\n//         \"HasPrecipitation\": false\r\n//       },\r\n//       \"Night\": {\r\n//         \"Icon\": 33,\r\n//         \"IconPhrase\": \"Clear\",\r\n//         \"HasPrecipitation\": false\r\n//       },\r\n//       \"Sources\": [\r\n//         \"AccuWeather\"\r\n//       ],\r\n//       \"MobileLink\": \"http://www.accuweather.com/en/gr/athens/182536/daily-weather-forecast/182536?day=4&lang=en-us\",\r\n//       \"Link\": \"http://www.accuweather.com/en/gr/athens/182536/daily-weather-forecast/182536?day=4&lang=en-us\"\r\n//     },\r\n//     {\r\n//       \"Date\": \"2021-07-26T07:00:00+03:00\",\r\n//       \"EpochDate\": 1627272000,\r\n//       \"Temperature\": {\r\n//         \"Minimum\": {\r\n//           \"Value\": 78,\r\n//           \"Unit\": \"F\",\r\n//           \"UnitType\": 18\r\n//         },\r\n//         \"Maximum\": {\r\n//           \"Value\": 93,\r\n//           \"Unit\": \"F\",\r\n//           \"UnitType\": 18\r\n//         }\r\n//       },\r\n//       \"Day\": {\r\n//         \"Icon\": 1,\r\n//         \"IconPhrase\": \"Sunny\",\r\n//         \"HasPrecipitation\": false\r\n//       },\r\n//       \"Night\": {\r\n//         \"Icon\": 33,\r\n//         \"IconPhrase\": \"Clear\",\r\n//         \"HasPrecipitation\": false\r\n//       },\r\n//       \"Sources\": [\r\n//         \"AccuWeather\"\r\n//       ],\r\n//       \"MobileLink\": \"http://www.accuweather.com/en/gr/athens/182536/daily-weather-forecast/182536?day=5&lang=en-us\",\r\n//       \"Link\": \"http://www.accuweather.com/en/gr/athens/182536/daily-weather-forecast/182536?day=5&lang=en-us\"\r\n//     }\r\n//   ]\r\n// }\r\n","import { getCities, getCity } from \"../../serverAPI/cities\";\r\nimport { getForecastData } from \"../../serverAPI/weather\";\r\n\r\nexport const getAllCities = (char) => async (dispatch) => {\r\n  try {\r\n    const res = await getCities(char);\r\n    const cities = res.length ? res : [];\r\n    if (!cities) {\r\n      dispatch({\r\n        type: \"ERROR_GET_CITIES\",\r\n        payload: \"There is some problem with the api response\",\r\n      });\r\n      return;\r\n    }\r\n    dispatch({ type: \"GET_CITIES\", payload: cities });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: \"ERROR_GET_CITIES\",\r\n      payload: \"There is some problem with the api response\",\r\n    });\r\n  }\r\n};\r\n\r\nexport const setCities = (cities) => {\r\n  return (dispatch) => {\r\n    dispatch({ type: \"SET_CITIES\", payload: cities.length ? cities : [] });\r\n  };\r\n};\r\n\r\nexport const setCity =\r\n  (cityName, error = null) =>\r\n  async (dispatch) => {\r\n    if (!error && cityName) {\r\n      try {\r\n        const cityRes = await getCity(cityName);\r\n        const city = cityRes ? cityRes : {};\r\n        const weatherRes = await getForecastData(city.Key);\r\n        const weather = weatherRes ? weatherRes : {};\r\n        if (!city) {\r\n          dispatch({\r\n            type: \"ERROR_SET_CITY\",\r\n            payload: { error: \"Location not found, Please try again later...\" },\r\n          });\r\n          return;\r\n        }\r\n        if (!weatherRes) {\r\n          dispatch({\r\n            type: \"ERROR_SET_CITY\",\r\n            payload: { error: \"Location not found, Please try again later...\" },\r\n          });\r\n          return;\r\n        }\r\n        dispatch({ type: \"SET_CITY\", payload: { city, weather } });\r\n      } catch (error) {\r\n        dispatch({\r\n          type: \"ERROR_SET_CITY\",\r\n          payload: { error: error },\r\n        });\r\n      }\r\n    }else{\r\n      dispatch({\r\n        type: \"ERROR_SET_CITY\",\r\n        payload: { error: error },\r\n      });\r\n    }\r\n  };\r\n\r\nexport const restartState = () => (dispatch) => {\r\n  dispatch({ type: \"RESTART_STATE\" });\r\n};\r\n","import { getLocation } from '../serverAPI/cities';\r\n\r\nexport const getWeatherIcon = (weather, text = false) => {\r\n  const time = new Date();\r\n  let iconID;\r\n  let iconPhrase;\r\n  if (weather.Day) {\r\n    if (time.getHours() < 23 && time.getHours() > 7) {\r\n      iconID = weather.Day.Icon;\r\n      iconPhrase = weather.Day.IconPhrase;\r\n    } else {\r\n      iconID = weather.Night.Icon;\r\n      iconPhrase = weather.Night.IconPhrase;\r\n    }\r\n  } else {\r\n    iconID = weather.icon;\r\n    iconPhrase = text;\r\n  }\r\n\r\n  switch (true) {\r\n    case iconID < 6:\r\n      return (\r\n        <div className=\"icon sunny\">\r\n          <div className=\"sun\">\r\n            <div className=\"rays\"></div>\r\n          </div>\r\n          <div>{iconPhrase}</div>\r\n        </div>\r\n      );\r\n    case iconID < 9:\r\n      return (\r\n        <div className=\"icon sun-shower\">\r\n          <div className=\"cloud\"></div>\r\n          <div className=\"sun\">\r\n            <div className=\"rays\"></div>\r\n          </div>\r\n          <div className=\"rain\"></div>\r\n          <div>{iconPhrase}</div>\r\n        </div>\r\n      );\r\n    case iconID < 11:\r\n      return (\r\n        <div className=\"icon cloudy\">\r\n          <div className=\"cloud\"></div>\r\n          <div className=\"cloud\"></div>\r\n          <div>{iconPhrase}</div>\r\n        </div>\r\n      );\r\n    case iconID < 14:\r\n      return (\r\n        <div className=\"icon rainy\">\r\n          <div className=\"cloud\"></div>\r\n          <div className=\"rain\"></div>\r\n          <div>{iconPhrase}</div>\r\n        </div>\r\n      );\r\n    case iconID < 17:\r\n      return (\r\n        <div className=\"icon thunder-storm\">\r\n          <div className=\"cloud\"></div>\r\n          <div className=\"lightning\">\r\n            <div className=\"bolt\"></div>\r\n            <div className=\"bolt\"></div>\r\n          </div>\r\n          <div>{iconPhrase}</div>\r\n        </div>\r\n      );\r\n    case iconID < 19:\r\n      return (\r\n        <div className=\"icon rainy\">\r\n          <div className=\"cloud\"></div>\r\n          <div className=\"rain\"></div>\r\n          <div>{iconPhrase}</div>\r\n        </div>\r\n      );\r\n    case iconID < 22:\r\n      return (\r\n        <div className=\"icon sun-shower\">\r\n          <div className=\"cloud\"></div>\r\n          <div className=\"sun\">\r\n            <div className=\"rays\"></div>\r\n          </div>\r\n          <div className=\"rain\"></div>\r\n          <div>{iconPhrase}</div>\r\n        </div>\r\n      );\r\n    case iconID < 24:\r\n      return (\r\n        <div className=\"icon flurries\">\r\n          <div className=\"cloud\"></div>\r\n          <div className=\"snow\">\r\n            <div className=\"flake\"></div>\r\n            <div className=\"flake\"></div>\r\n          </div>\r\n          <div>{iconPhrase}</div>\r\n        </div>\r\n      );\r\n    case iconID < 30:\r\n      return (\r\n        <div className=\"icon rainy\">\r\n          <div className=\"cloud\"></div>\r\n          <div className=\"rain\"></div>\r\n          <div>{iconPhrase}</div>\r\n        </div>\r\n      );\r\n    case iconID < 39:\r\n      return (\r\n        <div className=\"icon cloudy\">\r\n          <div className=\"cloud\"></div>\r\n          <div className=\"cloud\"></div>\r\n          <div>{iconPhrase}</div>\r\n        </div>\r\n      );\r\n    case iconID < 45:\r\n      return (\r\n        <div className=\"icon rainy\">\r\n          <div className=\"cloud\"></div>\r\n          <div className=\"rain\"></div>\r\n          <div>{iconPhrase}</div>\r\n        </div>\r\n      );\r\n    default:\r\n      return (\r\n        <div className=\"icon sunny\">\r\n          <div className=\"sun\">\r\n            <div className=\"rays\"></div>\r\n          </div>\r\n          <div>{iconPhrase}</div>\r\n        </div>\r\n      );\r\n  }\r\n};\r\n\r\nexport const maxMinTemp = (min, max) => {\r\n  if (max && min) {\r\n    const celMin = (5 * (min - 32)) / 9;\r\n    const celMax = (5 * (max - 32)) / 9;\r\n    return (\r\n      <h3 className=\"d-flex justify-content-around\">\r\n        <span>{Math.floor(celMin)}&deg;</span>\r\n        <span>{Math.floor(celMax)}&deg;</span>\r\n      </h3>\r\n    );\r\n  }\r\n};\r\n\r\nexport const getDayOfWeek = (date) => {\r\n  const dayOfWeek = new Date(date).getDay();\r\n  return isNaN(dayOfWeek)\r\n    ? null\r\n    : [\r\n        \"Sunday\",\r\n        \"Monday\",\r\n        \"Tuesday\",\r\n        \"Wednesday\",\r\n        \"Thursday\",\r\n        \"Friday\",\r\n        \"Saturday\",\r\n      ][dayOfWeek];\r\n};\r\n\r\nconst containsObject = (obj, arr) => {\r\n  let cell;\r\n  let index = 0;\r\n  for (cell in arr) {\r\n    if (arr[cell].Key === obj.Key) {\r\n      return { contain: true, index: index };\r\n    }\r\n    index += 1;\r\n  }\r\n\r\n  return { contain: false, index: index };\r\n};\r\n\r\nexport const handleSave = (city) => {\r\n  const prevStorage = JSON.parse(localStorage.getItem(\"favorites\"));\r\n  if (!prevStorage) {\r\n    const storage = [city];\r\n    localStorage.setItem(\"favorites\", JSON.stringify(storage));\r\n  } else {\r\n    if (containsObject(city, prevStorage).contain) {\r\n      return;\r\n    }\r\n    prevStorage.push(city);\r\n    localStorage.setItem(\"favorites\", JSON.stringify(prevStorage));\r\n  }\r\n};\r\n\r\nexport const handleDelete = (city) => {\r\n  const prevStorage = JSON.parse(localStorage.getItem(\"favorites\"));\r\n  if (!prevStorage) {\r\n    return;\r\n  } else {\r\n    const objIsContain = containsObject(city, prevStorage);\r\n    if (objIsContain.contain) {\r\n      prevStorage.splice(objIsContain.index, 1);\r\n      localStorage.setItem(\"favorites\", JSON.stringify(prevStorage));\r\n      return;\r\n    }\r\n  }\r\n};\r\n\r\n\r\nexport const getCurLocation = (setFunc) => {\r\n  let errorText;\r\n  let latitude;\r\n  let longitude;\r\n  const success = async (position) => {\r\n    latitude  = position.coords.latitude;\r\n    longitude = position.coords.longitude;\r\n    const city = await getLocation({latitude, longitude})\r\n    if(city){\r\n      setFunc(city.EnglishName);\r\n    }\r\n  }\r\n\r\n\r\n  const error = () => {\r\n    errorText = 'Unable to retrieve your location, please enable your browser location services';\r\n    setFunc(null , errorText);\r\n  }\r\n\r\n  if(!navigator.geolocation) {\r\n    errorText = 'Geolocation is not supported by your browser';\r\n    setFunc(null , errorText);\r\n  } else {\r\n    navigator.geolocation.getCurrentPosition(success, error);\r\n  }\r\n};","import React from \"react\";\r\n\r\nimport {\r\n  getWeatherIcon,\r\n  maxMinTemp,\r\n  getDayOfWeek,\r\n  handleSave,\r\n  handleDelete,\r\n} from \"../helpers\";\r\n\r\nimport \"./weather.css\";\r\nimport \"../../App.css\";\r\n\r\nconst Forecast = ({ weather, city, error = null }) => {\r\n  if (!error) {\r\n    return (\r\n      <div className=\"container text-light forecast\">\r\n        <div className=\"col-12\">\r\n          <h1 className=\"text-center\" style={{wordSpacing: '0.3em'}}>{city.LocalizedName}</h1>\r\n        </div>\r\n        <div className=\"row row-cols-1 row-cols-sm-2 row-cols-md-5 g-3\">\r\n          {weather.weatherData.DailyForecasts &&\r\n            weather.weatherData.DailyForecasts.map((data) => {\r\n              return (\r\n                <div className=\"col p-2\" key={data.Date}>\r\n                  <div className=\"container myCard spring-fever\">\r\n                    <div className=\"row justify-content-center\">\r\n                      {getWeatherIcon(data)}\r\n                    </div>\r\n\r\n                    {maxMinTemp(\r\n                      data.Temperature.Minimum.Value,\r\n                      data.Temperature.Maximum.Value\r\n                    )}\r\n\r\n                    <h4 className=\"py-3 text-center\">\r\n                      {getDayOfWeek(data.Date)}\r\n                    </h4>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n\r\n        {weather.weatherData.DailyForecasts && (\r\n          <div className=\"btn-group-vertical mt-3\">\r\n              <button\r\n                className=\"btn-save\"\r\n                onClick={() => handleSave(city)}\r\n              >\r\n                Save\r\n              </button>\r\n              <button\r\n                className=\"btn-delete\"\r\n                onClick={() => handleDelete(city)}\r\n              >\r\n                Delete\r\n              </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"container  errContainer\">\r\n        <div className=\"alert alert-danger\" role=\"alert\">\r\n          {error}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Forecast;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport Autocomplete from \"react-autocomplete\";\r\nimport Forecast from \"../weatherView/Forecast\";\r\n\r\nimport { getCurLocation } from '../helpers';\r\n\r\nimport '../../App.css';\r\n\r\nconst Search = ({\r\n  cities,\r\n  getAllCities,\r\n  setCity,\r\n  weather,\r\n  city,\r\n  error,\r\n}) => {\r\n  const [cityName, setCityName] = useState(\"\");\r\n  const [showForecast, setShowForecast] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getCurLocation(setCity);\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (weather.weatherData) {\r\n      setShowForecast(true);\r\n    } else {\r\n      setShowForecast(false);\r\n    }\r\n  }, [weather]);\r\n\r\n  const onChangeHandler = (char) => {\r\n    if (char.length === 0) {\r\n      return;\r\n    }\r\n    getAllCities(char);\r\n    setCityName(char);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setCity(cityName);\r\n  };\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row justify-content-center mt-3 mb-3\">\r\n          <div className=\"col-auto p-0\">\r\n            <button\r\n              onClick={handleSubmit}\r\n              className=\"btn btn-secondary\"\r\n              style={{ height: \"2em\" }}\r\n            >\r\n              Search\r\n            </button>\r\n          </div>\r\n          <div className=\"col-auto p-0 \" style={{ zIndex: \"9\" }}>\r\n            <Autocomplete\r\n              inputProps={{\r\n                style: {\r\n                  height: \"2em\",\r\n                },\r\n                placeholder: \"Search city\",\r\n              }}\r\n              getItemValue={(item) => item.LocalizedName}\r\n              items={cities}\r\n              renderItem={(item, isHighlighted) => (\r\n                <div\r\n                  style={{ background: isHighlighted ? \"lightgray\" : \"white\" }}\r\n                  key={item.Key}\r\n                >\r\n                  {item.LocalizedName}\r\n                </div>\r\n              )}\r\n              value={cityName}\r\n              onChange={(e) => onChangeHandler(e.target.value)}\r\n              onSelect={(val) => setCityName(val)}\r\n            />\r\n          </div>\r\n        </div>\r\n        {showForecast ? <Forecast weather={weather} city={city} error={error} /> : <div className=\"container errContainer\">\r\n        <div className=\"alert alert-danger err\" role=\"alert\">\r\n          {error}\r\n        </div>\r\n      </div>}\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\n\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./header.css\";\r\n\r\nconst Header = ({restartState}) => {\r\n  return (\r\n    <nav className=\"navbar navbar-light bg-light header\">\r\n      <div className=\"container-fluid\">\r\n        <NavLink \r\n        onClick={() => restartState()}\r\n          to=\"/\"\r\n          style={{\r\n            fontWeight: \"bold\",\r\n            color: \"black\",\r\n            fontFamily: [\"Audiowide\", \"sans-serif\"],\r\n            textDecoration: \"none\",\r\n            fontSize: \"2em\"\r\n          }}\r\n        >\r\n          EW\r\n        </NavLink>\r\n\r\n        <NavLink\r\n        onClick={() => restartState()}\r\n          to=\"/\"\r\n          style={{\r\n            fontWeight: \"bold\",\r\n            color: \"black\",\r\n            fontFamily: [\"Audiowide\", \"sans-serif\"],\r\n            textDecoration: \"none\",\r\n            fontSize: \"1em\"\r\n          }}\r\n        >\r\n          Search\r\n        </NavLink>\r\n\r\n        <NavLink\r\n          to=\"/favorites\"\r\n          style={{\r\n            fontWeight: \"bold\",\r\n            color: \"black\",\r\n            fontFamily: [\"Audiowide\", \"sans-serif\"],\r\n            textDecoration: \"none\",\r\n            fontSize: \"1em\"\r\n          }}\r\n        >\r\n          Favorites\r\n        </NavLink>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { getWeatherIcon } from \"../helpers\";\r\nimport { getWeatherData } from \"../../serverAPI/weather\";\r\nimport \"../weatherView/weather.css\";\r\n\r\nconst SingleCard = ({ countryName, cityName, cityKey }) => {\r\n  const [icon, setIcon] = useState(null);\r\n  const [temperature, setTemperature] = useState(null);\r\n  const [text, setText] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const setWeather = async () => {\r\n      const weather = await getWeatherData(cityKey);\r\n      if (weather) {\r\n        setIcon(weather.WeatherIcon);\r\n        setTemperature(weather.Temperature.Metric.Value);\r\n        setText(weather.WeatherText);\r\n      }\r\n    };\r\n    setWeather();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container myCard spring-fever\">\r\n      <div className=\"row justify-content-center\">\r\n        {getWeatherIcon({ icon: icon }, text)}\r\n      </div>\r\n\r\n      <h2 className=\"text-center\">{temperature}&deg;</h2>\r\n\r\n      <h4 className=\"py-3 text-center\">{cityName}</h4>\r\n      <h5 className=\"py-3 text-center\">{countryName}</h5>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingleCard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport SingleCard from \"../card/SingleCard\";\r\n\r\nconst Favorites = ({setCity}) => {\r\n  const [favorites, setFavorites] = useState({});\r\n  const [error, setError] = useState(null);\r\n  const  history = useHistory();\r\n  useEffect(() => {\r\n    const favorites = JSON.parse(localStorage.getItem(\"favorites\"));\r\n    if (favorites && favorites.length) {\r\n      setFavorites(favorites);\r\n    } else {\r\n      setError(\"there is no favorites locations\");\r\n    }\r\n  }, []);\r\n\r\n  const moveToCity = (city) => {\r\n    setCity(city);\r\n    history.push(\"/\");\r\n  }\r\n\r\n  if (!error) {\r\n    return (\r\n      <div className=\"container text-white mt-3\">\r\n        <div className=\"row\">\r\n          {favorites.length && favorites.map((city) => {\r\n            return (\r\n              <div className=\"col-12 col-sm-6 col-md-4 mb-3\" key={city.Key} onClick={() => moveToCity(city)}>\r\n                <SingleCard\r\n                  countryName={city.Country.LocalizedName}\r\n                  cityName={city.LocalizedName}\r\n                  cityKey={city.Key}\r\n                />\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"container  errContainer\">\r\n        <div className=\"alert alert-danger err\" role=\"alert\">\r\n          {error}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Favorites;\r\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport { actionCreators } from \"./store/index\";\n\nimport Search from \"./components/search/Search\";\nimport Header from \"./components/header/Header\";\nimport Favorites from \"./components/favorites/Favorites\";\n\nfunction App({\n  getAllCities,\n  setCity,\n  setWeather,\n  weather,\n  cities,\n  city,\n  citiesError,\n  restartState,\n}) {\n\n  return (\n    <Router>\n      <Header restartState={restartState}/>\n      <Switch>\n        <Route exact path=\"/\">\n          <Search\n            cities={cities}\n            getAllCities={getAllCities}\n            setCity={setCity}\n            setWeather={setWeather}\n            weather={weather}\n            city={city}\n            error={citiesError}\n            restartState={restartState}\n          />\n        </Route>\n        <Route path=\"/favorites\">\n          <Favorites setCity={setCity} />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  cities: state.cities.cities,\n  city: state.cities.city,\n  weather: state.weather,\n  citiesError: state.cities.error,\n});\n\nconst dipatchActionToProps = {\n  ...actionCreators,\n};\n\nexport default connect(mapStateToProps, dipatchActionToProps)(App);\n","const weatherDataReducer = (\r\n  state = {\r\n    weatherData: null\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    // case \"SET_WEATHER\":\r\n    //   return { ...state, weatherData: action.payload };\r\n    case \"SET_CITY\":\r\n      return { ...state, weatherData: action.payload.weather };\r\n    case \"RESTART_STATE\":\r\n      return { ...state, weatherData: {} };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default weatherDataReducer;\r\n","const citiesReducer = (state = {\r\n    cities: [],\r\n    city:{}\r\n}, action) => {\r\n    switch (action.type) {\r\n        case \"GET_CITIES\":\r\n            return {...state, cities: action.payload};\r\n        case \"SET_CITY\":\r\n            return {...state, city: action.payload.city, error: null};\r\n        case \"ERROR_SET_CITY\":\r\n            return {...state, error: action.payload.error};\r\n        case \"ERROR_GET_CITIES\":\r\n            return {...state, error: action.payload.error};\r\n        case \"RESTART_STATE\":\r\n            return {...state, city: {}, cites: [], error: null};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default citiesReducer;","import { combineReducers } from 'redux';\r\nimport weatherDataReducer from './weatherReducer';\r\nimport citiesReducer from './citiesReducer';\r\n\r\nconst reducers = combineReducers({\r\n    weather: weatherDataReducer,\r\n    cities: citiesReducer\r\n});\r\n\r\nexport default reducers;","import { applyMiddleware, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\nimport reducers from \"./reducers/reducers\";\r\n\r\nconst store = createStore(reducers, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\n\nimport store from \"./store/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}